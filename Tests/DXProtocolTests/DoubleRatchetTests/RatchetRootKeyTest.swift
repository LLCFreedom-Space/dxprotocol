// DXProtocol
// Copyright (C) 2022  FREEDOM SPACE, LLC

//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the GNU Affero General Public License as published
//  by the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU Affero General Public License for more details.
//
//  You should have received a copy of the GNU Affero General Public License
//  along with this program.  If not, see <https://www.gnu.org/licenses/>.

//
//  RatchetRootKeyTest.swift
//  DealogXTests
//
//  Created by Andriy Vasyk on 26.12.2022.
//

import Foundation
import XCTest
@testable import DXProtocol

final class RatchetRootKeyTest: XCTestCase {
    func testRatchetRootKeyCreateChainFromSecret() throws {
        let secret = Data([
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0x34, 0x6e, 0xf3, 0xee, 0xf3, 0xb6, 0x91, 0xd5, 0x04, 0x9b, 0xc6, 0x57,
            0xb7, 0xba, 0x82, 0x0f, 0xf9, 0xe8, 0x91, 0xb8, 0x02, 0xb4, 0xb7, 0x85, 0xd8, 0xf9, 0x3d,
            0xad, 0x31, 0x2b, 0xf7, 0x11, 0x41, 0xc2, 0x55, 0x59, 0x57, 0x39, 0x6b, 0xa1, 0x91, 0x9a,
            0x92, 0x1b, 0xed, 0x4c, 0xf4, 0x89, 0x52, 0x11, 0x62, 0x4b, 0xed, 0xeb, 0x99, 0x3d, 0x64,
            0xc5, 0x3a, 0x4e, 0x3e, 0xe5, 0x00, 0x31, 0x09, 0xb2, 0x29, 0x47, 0x74, 0x48, 0x01, 0x58,
            0xf8, 0x41, 0x2a, 0xe9, 0x38, 0x20, 0x02, 0x2a, 0xcc, 0x2c, 0xae, 0x64, 0x05, 0x32, 0x81,
            0x83, 0xeb, 0x34, 0x20, 0x31, 0xd7, 0x63, 0xf9, 0x21
        ])

        let expectedRootKeyData = Data([
            0xb8, 0x35, 0x24, 0xeb, 0x7d, 0xb1, 0x01, 0x72, 0x69, 0x83, 0x0d, 0x90, 0x9d, 0x92, 0x1b,
            0x9f, 0xc8, 0xf6, 0xb6, 0xe6, 0xa9, 0x60, 0xbd, 0xb8, 0xb7, 0xe0, 0x5c, 0x5f, 0x2e, 0x7f,
            0x22, 0x06
        ])

        let expectedChainKeyData = Data([
            0x26, 0xc7, 0xca, 0xbb, 0x29, 0xcb, 0xf6, 0xda, 0xdb, 0x0d, 0xb4, 0x5b, 0xac, 0x0a, 0x41,
            0x75, 0xe2, 0x69, 0x18, 0x73, 0xf4, 0x64, 0x1a, 0xe8, 0x5f, 0xe8, 0x80, 0xa8, 0x66, 0x9b,
            0xb8, 0x82
        ])

        let (rootKey, chainKey) = try RatchetRootKey.createChainFrom(secret: secret)
        XCTAssertEqual(rootKey.data, expectedRootKeyData)
        XCTAssertEqual(chainKey.data, expectedChainKeyData)
        XCTAssertEqual(chainKey.index, 0)
    }

    func testRatchetRootKeyCreateChain() throws {
        let bobRatchetPublicKeyData = Data([
            0x2c, 0xb4, 0x97, 0x76, 0xb8, 0x77, 0x02, 0x05, 0x74, 0x5a, 0x3a, 0x6e, 0x24, 0xf5, 0x79,
            0xcd, 0xb4, 0xba, 0x7a, 0x89, 0x04, 0x10, 0x05, 0x92, 0x8e, 0xbb, 0xad, 0xc9, 0xc0, 0x5a,
            0xd4, 0x58
        ])

        let aliceRatchetPrivateKeyData = Data([
            0x98, 0x90, 0x82, 0xaf, 0x75, 0xe5, 0x52, 0xc6, 0x21, 0xba, 0xa1, 0xa7, 0xc2, 0xed, 0x88,
            0x4a, 0xa6, 0xd4, 0x0d, 0xab, 0x6d, 0xbb, 0x36, 0x17, 0x64, 0xcb, 0xb4, 0x54, 0x8d, 0xa9,
            0x33, 0x51
        ])

        let rootKeyData = Data([
            0xcd, 0xbd, 0x35, 0x39, 0x2e, 0x30, 0x0d, 0xb7, 0xb2, 0x8f, 0x9e, 0x85, 0x01, 0xeb, 0x21,
            0xb2, 0x24, 0xcd, 0x8c, 0xa0, 0xa0, 0x09, 0xc8, 0x33, 0x9f, 0xbe, 0x89, 0x61, 0x40, 0x35,
            0xbc, 0xb2
        ])

        let expectedNextRootKeyData = Data([
            0x51, 0x5c, 0xa8, 0x0c, 0xdd, 0x26, 0x57, 0x8f, 0xf5, 0xd8, 0x64, 0x52, 0xc1, 0x60, 0xd0,
            0xf6, 0x26, 0x04, 0x7b, 0x97, 0xc4, 0x37, 0x44, 0x83, 0xf1, 0x2a, 0xaa, 0x31, 0x10, 0x02,
            0x54, 0x7a
        ])

        let expectedNextChainKeyData = Data([
            0x93, 0x46, 0x09, 0x98, 0xf5, 0x50, 0x57, 0x90, 0xa1, 0x0c, 0x67, 0xc2, 0x21, 0x79, 0xf4,
            0x10, 0xee, 0x47, 0x92, 0xc7, 0xcc, 0x62, 0xb6, 0xe5, 0x3a, 0x46, 0xf3, 0x44, 0x1a, 0x86,
            0x83, 0xd1
        ])

        let rootKey = RatchetRootKey(data: rootKeyData)
        let (nextRootKey, nextChainKey) = try rootKey.createChain(
                theirRatchetKey: try PublicKey(data: bobRatchetPublicKeyData),
                ourRatchetKey: try PrivateKey(data: aliceRatchetPrivateKeyData))

        XCTAssertEqual(nextRootKey.data, expectedNextRootKeyData)
        XCTAssertEqual(nextChainKey.data, expectedNextChainKeyData)
        XCTAssertEqual(nextChainKey.index, 0)
    }
}
